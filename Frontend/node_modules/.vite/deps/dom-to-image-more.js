import { __commonJS } from "./chunk-Cas2H8Ax.js";

//#region node_modules/dom-to-image-more/dist/dom-to-image-more.min.js
var require_dom_to_image_more_min = /* @__PURE__ */ __commonJS({ "node_modules/dom-to-image-more/dist/dom-to-image-more.min.js": ((exports, module) => {
	/*! dom-to-image-more 20-08-2025 */
	((l) => {
		let f = (() => {
			let e$1 = 0;
			return {
				escape: function(e$2) {
					return e$2.replace(/([.*+?^${}()|[\]/\\])/g, "\\$1");
				},
				isDataUrl: function(e$2) {
					return -1 !== e$2.search(/^(data:)/);
				},
				canvasToBlob: function(t$2) {
					if (t$2.toBlob) return new Promise(function(e$2) {
						t$2.toBlob(e$2);
					});
					return ((r$2) => new Promise(function(e$2) {
						var t$3 = s(r$2.toDataURL().split(",")[1]), n$2 = t$3.length, o$2 = new Uint8Array(n$2);
						for (let e$3 = 0; e$3 < n$2; e$3++) o$2[e$3] = t$3.charCodeAt(e$3);
						e$2(new Blob([o$2], { type: "image/png" }));
					}))(t$2);
				},
				resolveUrl: function(e$2, t$2) {
					var n$2 = document.implementation.createHTMLDocument(), o$2 = n$2.createElement("base"), r$2 = (n$2.head.appendChild(o$2), n$2.createElement("a"));
					return n$2.body.appendChild(r$2), o$2.href = t$2, r$2.href = e$2, r$2.href;
				},
				getAndEncode: function(l$1) {
					let e$2 = d.impl.urlCache.find(function(e$3) {
						return e$3.url === l$1;
					});
					e$2 || (e$2 = {
						url: l$1,
						promise: null
					}, d.impl.urlCache.push(e$2));
					null === e$2.promise && (d.impl.options.cacheBust && (l$1 += (/\?/.test(l$1) ? "&" : "?") + (/* @__PURE__ */ new Date()).getTime()), e$2.promise = new Promise(function(n$2) {
						let r$2 = new XMLHttpRequest();
						function i$2(e$4) {
							console.error(e$4), n$2("");
						}
						function t$2() {
							var e$4 = d.impl.options.imagePlaceholder;
							e$4 ? n$2(e$4) : i$2("Status:" + r$2.status + " while fetching resource: " + l$1);
						}
						if (r$2.timeout = d.impl.options.httpTimeout, r$2.onerror = t$2, r$2.ontimeout = t$2, r$2.onloadend = function() {
							if (r$2.readyState === XMLHttpRequest.DONE) {
								var e$4 = r$2.status;
								if (0 === e$4 && l$1.toLowerCase().startsWith("file://") || 200 <= e$4 && e$4 <= 300 && null !== r$2.response) {
									e$4 = r$2.response;
									e$4 instanceof Blob || i$2("Expected response to be a Blob, but got: " + typeof e$4);
									let t$3 = new FileReader();
									t$3.onloadend = function() {
										var e$5 = t$3.result;
										n$2(e$5);
									};
									try {
										t$3.readAsDataURL(e$4);
									} catch (e$5) {
										i$2("Failed to read the response as Data URL: " + e$5.toString());
									}
								} else t$2();
							}
						}, 0 < d.impl.options.useCredentialsFilters.length && (d.impl.options.useCredentials = 0 < d.impl.options.useCredentialsFilters.filter((e$4) => 0 <= l$1.search(e$4)).length), d.impl.options.useCredentials && (r$2.withCredentials = !0), d.impl.options.corsImg && 0 === l$1.indexOf("http") && -1 === l$1.indexOf(window.location.origin)) {
							var e$3 = "POST" === (d.impl.options.corsImg.method || "GET").toUpperCase() ? "POST" : "GET";
							r$2.open(e$3, (d.impl.options.corsImg.url || "").replace("#{cors}", l$1), !0);
							let t$3 = !1, n$3 = d.impl.options.corsImg.headers || {}, o$2 = (Object.keys(n$3).forEach(function(e$4) {
								-1 !== n$3[e$4].indexOf("application/json") && (t$3 = !0), r$2.setRequestHeader(e$4, n$3[e$4]);
							}), ((e$4) => {
								try {
									return JSON.parse(JSON.stringify(e$4));
								} catch (e$5) {
									i$2("corsImg.data is missing or invalid:" + e$5.toString());
								}
							})(d.impl.options.corsImg.data || ""));
							Object.keys(o$2).forEach(function(e$4) {
								"string" == typeof o$2[e$4] && (o$2[e$4] = o$2[e$4].replace("#{cors}", l$1));
							}), r$2.responseType = "blob", r$2.send(t$3 ? JSON.stringify(o$2) : o$2);
						} else r$2.open("GET", l$1, !0), r$2.responseType = "blob", r$2.send();
					}));
					return e$2.promise;
				},
				uid: function() {
					return "u" + ("0000" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4) + e$1++;
				},
				asArray: function(t$2) {
					var n$2 = [], o$2 = t$2.length;
					for (let e$2 = 0; e$2 < o$2; e$2++) n$2.push(t$2[e$2]);
					return n$2;
				},
				escapeXhtml: function(e$2) {
					return e$2.replace(/%/g, "%25").replace(/#/g, "%23").replace(/\n/g, "%0A");
				},
				makeImage: function(r$2) {
					return "data:," !== r$2 ? new Promise(function(e$2, t$2) {
						let n$2 = document.createElementNS("http://www.w3.org/2000/svg", "svg"), o$2 = new Image();
						d.impl.options.useCredentials && (o$2.crossOrigin = "use-credentials"), o$2.onload = function() {
							document.body.removeChild(n$2), window && window.requestAnimationFrame ? window.requestAnimationFrame(function() {
								e$2(o$2);
							}) : e$2(o$2);
						}, o$2.onerror = (e$3) => {
							document.body.removeChild(n$2), t$2(e$3);
						}, n$2.appendChild(o$2), o$2.src = r$2, document.body.appendChild(n$2);
					}) : Promise.resolve();
				},
				width: function(e$2) {
					var t$2 = i$1(e$2, "width");
					if (!isNaN(t$2)) return t$2;
					var t$2 = i$1(e$2, "border-left-width"), n$2 = i$1(e$2, "border-right-width");
					return e$2.scrollWidth + t$2 + n$2;
				},
				height: function(e$2) {
					var t$2 = i$1(e$2, "height");
					if (!isNaN(t$2)) return t$2;
					var t$2 = i$1(e$2, "border-top-width"), n$2 = i$1(e$2, "border-bottom-width");
					return e$2.scrollHeight + t$2 + n$2;
				},
				getWindow: t$1,
				isElement: r$1,
				isElementHostForOpenShadowRoot: function(e$2) {
					return r$1(e$2) && null !== e$2.shadowRoot;
				},
				isShadowRoot: n$1,
				isInShadowRoot: o$1,
				isHTMLElement: function(e$2) {
					return e$2 instanceof t$1(e$2).HTMLElement;
				},
				isHTMLCanvasElement: function(e$2) {
					return e$2 instanceof t$1(e$2).HTMLCanvasElement;
				},
				isHTMLInputElement: function(e$2) {
					return e$2 instanceof t$1(e$2).HTMLInputElement;
				},
				isHTMLImageElement: function(e$2) {
					return e$2 instanceof t$1(e$2).HTMLImageElement;
				},
				isHTMLLinkElement: function(e$2) {
					return e$2 instanceof t$1(e$2).HTMLLinkElement;
				},
				isHTMLScriptElement: function(e$2) {
					return e$2 instanceof t$1(e$2).HTMLScriptElement;
				},
				isHTMLStyleElement: function(e$2) {
					return e$2 instanceof t$1(e$2).HTMLStyleElement;
				},
				isHTMLTextAreaElement: function(e$2) {
					return e$2 instanceof t$1(e$2).HTMLTextAreaElement;
				},
				isShadowSlotElement: function(e$2) {
					return o$1(e$2) && e$2 instanceof t$1(e$2).HTMLSlotElement;
				},
				isSVGElement: function(e$2) {
					return e$2 instanceof t$1(e$2).SVGElement;
				},
				isSVGRectElement: function(e$2) {
					return e$2 instanceof t$1(e$2).SVGRectElement;
				},
				isDimensionMissing: function(e$2) {
					return isNaN(e$2) || e$2 <= 0;
				}
			};
			function t$1(e$2) {
				e$2 = e$2 ? e$2.ownerDocument : void 0;
				return (e$2 ? e$2.defaultView : void 0) || window || l;
			}
			function n$1(e$2) {
				return e$2 instanceof t$1(e$2).ShadowRoot;
			}
			function o$1(e$2) {
				return null != e$2 && void 0 !== e$2.getRootNode && n$1(e$2.getRootNode());
			}
			function r$1(e$2) {
				return e$2 instanceof t$1(e$2).Element;
			}
			function i$1(t$2, n$2) {
				if (t$2.nodeType === m) {
					let e$2 = h(t$2).getPropertyValue(n$2);
					if ("px" === e$2.slice(-2)) return e$2 = e$2.slice(0, -2), parseFloat(e$2);
				}
				return NaN;
			}
		})(), r = (() => {
			let o$1 = /url\(\s*(["']?)((?:\\.|[^\\)])+)\1\s*\)/gm;
			return {
				inlineAll: function(t$1, o$2, r$2) {
					if (!e$1(t$1)) return Promise.resolve(t$1);
					return Promise.resolve(t$1).then(n$1).then(function(e$2) {
						let n$2 = Promise.resolve(t$1);
						return e$2.forEach(function(t$2) {
							n$2 = n$2.then(function(e$3) {
								return i$1(e$3, t$2, o$2, r$2);
							});
						}), n$2;
					});
				},
				shouldProcess: e$1,
				impl: {
					readUrls: n$1,
					inline: i$1,
					urlAsRegex: r$1
				}
			};
			function e$1(e$2) {
				return -1 !== e$2.search(o$1);
			}
			function n$1(e$2) {
				for (var t$1, n$2 = []; null !== (t$1 = o$1.exec(e$2));) n$2.push(t$1[2]);
				return n$2.filter(function(e$3) {
					return !f.isDataUrl(e$3);
				});
			}
			function r$1(e$2) {
				return new RegExp(`url\\((["']?)(${f.escape(e$2)})\\1\\)`, "gm");
			}
			function i$1(n$2, o$2, t$1, e$2) {
				return Promise.resolve(o$2).then(function(e$3) {
					return t$1 ? f.resolveUrl(e$3, t$1) : e$3;
				}).then(e$2 || f.getAndEncode).then(function(e$3) {
					var t$2 = r$1(o$2);
					return n$2.replace(t$2, `url($1${e$3}$1)`);
				});
			}
		})(), e = {
			resolveAll: function() {
				return t().then(function(e$1) {
					return Promise.all(e$1.map(function(e$2) {
						return e$2.resolve();
					}));
				}).then(function(e$1) {
					return e$1.join("\n");
				});
			},
			impl: { readAll: t }
		};
		function t() {
			return Promise.resolve(f.asArray(document.styleSheets)).then(function(e$1) {
				let n$1 = [];
				return e$1.forEach(function(t$2) {
					var e$2 = Object.getPrototypeOf(t$2);
					if (Object.prototype.hasOwnProperty.call(e$2, "cssRules")) try {
						f.asArray(t$2.cssRules || []).forEach(n$1.push.bind(n$1));
					} catch (e$3) {
						console.error("domtoimage: Error while reading CSS rules from: " + t$2.href, e$3.toString());
					}
				}), n$1;
			}).then(function(e$1) {
				return e$1.filter(function(e$2) {
					return e$2.type === CSSRule.FONT_FACE_RULE;
				}).filter(function(e$2) {
					return r.shouldProcess(e$2.style.getPropertyValue("src"));
				});
			}).then(function(e$1) {
				return e$1.map(t$1);
			});
			function t$1(t$2) {
				return {
					resolve: function() {
						var e$1 = (t$2.parentStyleSheet || {}).href;
						return r.inlineAll(t$2.cssText, e$1);
					},
					src: function() {
						return t$2.style.getPropertyValue("src");
					}
				};
			}
		}
		let n = {
			inlineAll: function t$1(e$1) {
				if (!f.isElement(e$1)) return Promise.resolve(e$1);
				return n$1(e$1).then(function() {
					return f.isHTMLImageElement(e$1) ? o(e$1).inline() : Promise.all(f.asArray(e$1.childNodes).map(function(e$2) {
						return t$1(e$2);
					}));
				});
				function n$1(o$1) {
					let t$2 = ["background", "background-image"].map(function(t$3) {
						let e$2 = o$1.style.getPropertyValue(t$3), n$2 = o$1.style.getPropertyPriority(t$3);
						return e$2 ? r.inlineAll(e$2).then(function(e$3) {
							o$1.style.setProperty(t$3, e$3, n$2);
						}) : Promise.resolve();
					});
					return Promise.all(t$2).then(function() {
						return o$1;
					});
				}
			},
			impl: { newImage: o }
		};
		function o(n$1) {
			return { inline: function(e$1) {
				if (f.isDataUrl(n$1.src)) return Promise.resolve();
				return Promise.resolve(n$1.src).then(e$1 || f.getAndEncode).then(function(t$1) {
					return new Promise(function(e$2) {
						n$1.onload = e$2, n$1.onerror = e$2, n$1.src = t$1;
					});
				});
			} };
		}
		let i = {
			copyDefaultStyles: !0,
			imagePlaceholder: void 0,
			cacheBust: !1,
			useCredentials: !1,
			useCredentialsFilters: [],
			httpTimeout: 3e4,
			styleCaching: "strict",
			corsImg: void 0,
			adjustClonedNode: void 0,
			filterStyles: void 0
		}, d = {
			toSvg: u,
			toPng: function(e$1, t$1) {
				return a(e$1, t$1).then(function(e$2) {
					return e$2.toDataURL();
				});
			},
			toJpeg: function(e$1, t$1) {
				return a(e$1, t$1).then(function(e$2) {
					return e$2.toDataURL("image/jpeg", (t$1 ? t$1.quality : void 0) || 1);
				});
			},
			toBlob: function(e$1, t$1) {
				return a(e$1, t$1).then(f.canvasToBlob);
			},
			toPixelData: function(t$1, e$1) {
				return a(t$1, e$1).then(function(e$2) {
					return e$2.getContext("2d").getImageData(0, 0, f.width(t$1), f.height(t$1)).data;
				});
			},
			toCanvas: a,
			impl: {
				fontFaces: e,
				images: n,
				util: f,
				inliner: r,
				urlCache: [],
				options: {},
				copyOptions: function(e$1) {
					void 0 === e$1.copyDefaultStyles ? d.impl.options.copyDefaultStyles = i.copyDefaultStyles : d.impl.options.copyDefaultStyles = e$1.copyDefaultStyles;
					d.impl.options.imagePlaceholder = (void 0 === e$1.imagePlaceholder ? i : e$1).imagePlaceholder;
					d.impl.options.cacheBust = (void 0 === e$1.cacheBust ? i : e$1).cacheBust;
					d.impl.options.corsImg = (void 0 === e$1.corsImg ? i : e$1).corsImg;
					d.impl.options.useCredentials = (void 0 === e$1.useCredentials ? i : e$1).useCredentials;
					d.impl.options.useCredentialsFilters = (void 0 === e$1.useCredentialsFilters ? i : e$1).useCredentialsFilters;
					d.impl.options.httpTimeout = (void 0 === e$1.httpTimeout ? i : e$1).httpTimeout;
					d.impl.options.styleCaching = (void 0 === e$1.styleCaching ? i : e$1).styleCaching;
				}
			}
		}, m = ("object" == typeof exports && "object" == typeof module ? module.exports = d : l.domtoimage = d, ("undefined" != typeof Node ? Node.ELEMENT_NODE : void 0) || 1), h = (void 0 !== l ? l.getComputedStyle : void 0) || ("undefined" != typeof window ? window.getComputedStyle : void 0) || globalThis.getComputedStyle, s = (void 0 !== l ? l.atob : void 0) || ("undefined" != typeof window ? window.atob : void 0) || globalThis.atob;
		function u(t$1, r$1) {
			let n$1 = d.impl.util.getWindow(t$1), i$1 = (r$1 = r$1 || {}, d.impl.copyOptions(r$1), []);
			return Promise.resolve(t$1).then(function(e$1) {
				if (e$1.nodeType === m) return e$1;
				var t$2 = e$1, n$2 = e$1.parentNode, o$1 = document.createElement("span");
				return n$2.replaceChild(o$1, t$2), o$1.append(e$1), i$1.push({
					parent: n$2,
					child: t$2,
					wrapper: o$1
				}), o$1;
			}).then(function(e$1) {
				return function l$1(t$2, s$1, i$2, u$1) {
					let e$2 = s$1.filter;
					if (t$2 === p || f.isHTMLScriptElement(t$2) || f.isHTMLStyleElement(t$2) || f.isHTMLLinkElement(t$2) || null !== i$2 && e$2 && !e$2(t$2)) return Promise.resolve();
					return Promise.resolve(t$2).then(n$2).then(o$1).then(function(e$3) {
						return c$1(e$3, a$1(t$2));
					}).then(r$2).then(function(e$3) {
						return d$1(e$3, t$2);
					});
					function n$2(e$3) {
						return f.isHTMLCanvasElement(e$3) ? f.makeImage(e$3.toDataURL()) : e$3.cloneNode(!1);
					}
					function o$1(e$3) {
						return s$1.adjustClonedNode && s$1.adjustClonedNode(t$2, e$3, !1), Promise.resolve(e$3);
					}
					function r$2(e$3) {
						return s$1.adjustClonedNode && s$1.adjustClonedNode(t$2, e$3, !0), Promise.resolve(e$3);
					}
					function a$1(e$3) {
						return f.isElementHostForOpenShadowRoot(e$3) ? e$3.shadowRoot : e$3;
					}
					function c$1(n$3, e$3) {
						let o$2 = t$3(e$3), r$3 = Promise.resolve();
						if (0 !== o$2.length) {
							let t$4 = h(i$3(e$3));
							f.asArray(o$2).forEach(function(e$4) {
								r$3 = r$3.then(function() {
									return l$1(e$4, s$1, t$4, u$1).then(function(e$5) {
										e$5 && n$3.appendChild(e$5);
									});
								});
							});
						}
						return r$3.then(function() {
							return n$3;
						});
						function i$3(e$4) {
							return f.isShadowRoot(e$4) ? e$4.host : e$4;
						}
						function t$3(t$4) {
							if (f.isShadowSlotElement(t$4)) {
								let e$4 = t$4.assignedNodes();
								if (e$4 && 0 < e$4.length) return e$4;
							}
							return t$4.childNodes;
						}
					}
					function d$1(u$2, a$2) {
						return !f.isElement(u$2) || f.isShadowSlotElement(a$2) ? Promise.resolve(u$2) : Promise.resolve().then(t$3).then(n$3).then(o$2).then(r$3).then(e$3).then(function() {
							return u$2;
						});
						function e$3() {
							f.isHTMLImageElement(u$2) && (u$2.removeAttribute("loading"), a$2.srcset || a$2.sizes) && (u$2.removeAttribute("srcset"), u$2.removeAttribute("sizes"), u$2.src = a$2.currentSrc || a$2.src);
						}
						function t$3() {
							function o$3(e$5, t$4) {
								t$4.font = e$5.font, t$4.fontFamily = e$5.fontFamily, t$4.fontFeatureSettings = e$5.fontFeatureSettings, t$4.fontKerning = e$5.fontKerning, t$4.fontSize = e$5.fontSize, t$4.fontStretch = e$5.fontStretch, t$4.fontStyle = e$5.fontStyle, t$4.fontVariant = e$5.fontVariant, t$4.fontVariantCaps = e$5.fontVariantCaps, t$4.fontVariantEastAsian = e$5.fontVariantEastAsian, t$4.fontVariantLigatures = e$5.fontVariantLigatures, t$4.fontVariantNumeric = e$5.fontVariantNumeric, t$4.fontVariationSettings = e$5.fontVariationSettings, t$4.fontWeight = e$5.fontWeight;
							}
							function e$4(e$5, t$4) {
								let n$4 = h(e$5);
								n$4.cssText ? (t$4.style.cssText = n$4.cssText, o$3(n$4, t$4.style)) : (y(s$1, e$5, n$4, i$2, t$4), null === i$2 && ([
									"inset-block",
									"inset-block-start",
									"inset-block-end"
								].forEach((e$6) => t$4.style.removeProperty(e$6)), [
									"left",
									"right",
									"top",
									"bottom"
								].forEach((e$6) => {
									t$4.style.getPropertyValue(e$6) && t$4.style.setProperty(e$6, "0px");
								})));
							}
							e$4(a$2, u$2);
						}
						function n$3() {
							let s$2 = f.uid();
							function t$4(r$4) {
								let i$3 = h(a$2, r$4), l$2 = i$3.getPropertyValue("content");
								if ("" !== l$2 && "none" !== l$2) {
									let e$4 = u$2.getAttribute("class") || "", t$5 = (u$2.setAttribute("class", e$4 + " " + s$2), document.createElement("style"));
									function n$4() {
										let e$5 = `.${s$2}:` + r$4, t$6 = (i$3.cssText ? n$5 : o$3)();
										return document.createTextNode(e$5 + `{${t$6}}`);
										function n$5() {
											return `${i$3.cssText} content: ${l$2};`;
										}
										function o$3() {
											return f.asArray(i$3).map(t$7).join("; ") + ";";
											function t$7(e$6) {
												let t$8 = i$3.getPropertyValue(e$6), n$6 = i$3.getPropertyPriority(e$6) ? " !important" : "";
												return e$6 + ": " + t$8 + n$6;
											}
										}
									}
									t$5.appendChild(n$4()), u$2.appendChild(t$5);
								}
							}
							[":before", ":after"].forEach(function(e$4) {
								t$4(e$4);
							});
						}
						function o$2() {
							f.isHTMLTextAreaElement(a$2) && (u$2.innerHTML = a$2.value), f.isHTMLInputElement(a$2) && u$2.setAttribute("value", a$2.value);
						}
						function r$3() {
							f.isSVGElement(u$2) && (u$2.setAttribute("xmlns", "http://www.w3.org/2000/svg"), f.isSVGRectElement(u$2)) && ["width", "height"].forEach(function(e$4) {
								let t$4 = u$2.getAttribute(e$4);
								t$4 && u$2.style.setProperty(e$4, t$4);
							});
						}
					}
				}(e$1, r$1, null, n$1);
			}).then(r$1.disableEmbedFonts ? Promise.resolve(t$1) : c).then(r$1.disableInlineImages ? Promise.resolve(t$1) : g).then(function(t$2) {
				r$1.bgcolor && (t$2.style.backgroundColor = r$1.bgcolor);
				r$1.width && (t$2.style.width = r$1.width + "px");
				r$1.height && (t$2.style.height = r$1.height + "px");
				r$1.style && Object.keys(r$1.style).forEach(function(e$2) {
					t$2.style[e$2] = r$1.style[e$2];
				});
				let e$1 = null;
				"function" == typeof r$1.onclone && (e$1 = r$1.onclone(t$2));
				return Promise.resolve(e$1).then(function() {
					return t$2;
				});
			}).then(function(e$1) {
				let n$2 = r$1.width || f.width(t$1), o$1 = r$1.height || f.height(t$1);
				return Promise.resolve(e$1).then(function(e$2) {
					return e$2.setAttribute("xmlns", "http://www.w3.org/1999/xhtml"), new XMLSerializer().serializeToString(e$2);
				}).then(f.escapeXhtml).then(function(e$2) {
					var t$2 = (f.isDimensionMissing(n$2) ? " width=\"100%\"" : ` width="${n$2}"`) + (f.isDimensionMissing(o$1) ? " height=\"100%\"" : ` height="${o$1}"`);
					return `<svg xmlns="http://www.w3.org/2000/svg"${(f.isDimensionMissing(n$2) ? "" : ` width="${n$2}"`) + (f.isDimensionMissing(o$1) ? "" : ` height="${o$1}"`)}><foreignObject${t$2}>${e$2}</foreignObject></svg>`;
				}).then(function(e$2) {
					return "data:image/svg+xml;charset=utf-8," + e$2;
				});
			}).then(function(e$1) {
				for (; 0 < i$1.length;) {
					var t$2 = i$1.pop();
					t$2.parent.replaceChild(t$2.child, t$2.wrapper);
				}
				return e$1;
			}).then(function(e$1) {
				return d.impl.urlCache = [], p && (document.body.removeChild(p), p = null), v && clearTimeout(v), v = setTimeout(() => {
					v = null, w = {};
				}, 2e4), e$1;
			});
		}
		function a(r$1, i$1) {
			return u(r$1, i$1 = i$1 || {}).then(f.makeImage).then(function(e$1) {
				var t$1 = "number" != typeof i$1.scale ? 1 : i$1.scale, n$1 = ((e$2, t$2) => {
					let n$2 = i$1.width || f.width(e$2), o$2 = i$1.height || f.height(e$2);
					return f.isDimensionMissing(n$2) && (n$2 = f.isDimensionMissing(o$2) ? 300 : 2 * o$2), f.isDimensionMissing(o$2) && (o$2 = n$2 / 2), (e$2 = document.createElement("canvas")).width = n$2 * t$2, e$2.height = o$2 * t$2, i$1.bgcolor && ((t$2 = e$2.getContext("2d")).fillStyle = i$1.bgcolor, t$2.fillRect(0, 0, e$2.width, e$2.height)), e$2;
				})(r$1, t$1), o$1 = n$1.getContext("2d");
				return o$1.msImageSmoothingEnabled = !1, o$1.imageSmoothingEnabled = !1, e$1 && (o$1.scale(t$1, t$1), o$1.drawImage(e$1, 0, 0)), n$1;
			});
		}
		let p = null;
		function c(n$1) {
			return e.resolveAll().then(function(e$1) {
				var t$1;
				return "" !== e$1 && (t$1 = document.createElement("style"), n$1.appendChild(t$1), t$1.appendChild(document.createTextNode(e$1))), n$1;
			});
		}
		function g(e$1) {
			return n.inlineAll(e$1).then(function() {
				return e$1;
			});
		}
		function y(i$1, l$1, s$1, u$1, e$1) {
			let a$1 = d.impl.options.copyDefaultStyles ? ((t$1, e$2) => {
				var n$1, o$1 = ((e$3) => ("relaxed" !== t$1.styleCaching ? e$3 : e$3.filter((e$4, t$2, n$2) => 0 === t$2 || t$2 === n$2.length - 1)).join(">"))(e$2 = ((e$3) => {
					var t$2 = [];
					do
						if (e$3.nodeType === m) {
							var n$2 = e$3.tagName;
							if (t$2.push(n$2), E.includes(n$2)) break;
						}
					while (e$3 = e$3.parentNode);
					return t$2;
				})(e$2));
				if (w[o$1]) return w[o$1];
				e$2 = ((e$3, t$2) => {
					let n$2 = e$3.body;
					do {
						var o$2 = t$2.pop(), o$2 = e$3.createElement(o$2);
						n$2.appendChild(o$2), n$2 = o$2;
					} while (0 < t$2.length);
					return n$2.textContent = "​", n$2;
				})((n$1 = (() => {
					if (p) return p.contentWindow;
					t$2 = document.characterSet || "UTF-8", e$3 = (e$3 = document.doctype) ? (`<!DOCTYPE ${s$2(e$3.name)} ${s$2(e$3.publicId)} ` + s$2(e$3.systemId)).trim() + ">" : "", (p = document.createElement("iframe")).id = "domtoimage-sandbox-" + f.uid(), p.style.visibility = "hidden", p.style.position = "fixed", document.body.appendChild(p);
					var e$3, t$2, n$2 = p, o$2 = "domtoimage-sandbox";
					try {
						return n$2.contentWindow.document.write(e$3 + `<html><head><meta charset='${t$2}'><title>${o$2}</title></head><body></body></html>`), n$2.contentWindow;
					} catch (e$4) {}
					var r$2 = document.createElement("meta");
					r$2.setAttribute("charset", t$2);
					try {
						var i$3 = document.implementation.createHTMLDocument(o$2), l$2 = (i$3.head.appendChild(r$2), e$3 + i$3.documentElement.outerHTML);
						return n$2.setAttribute("srcdoc", l$2), n$2.contentWindow;
					} catch (e$4) {}
					return n$2.contentDocument.head.appendChild(r$2), n$2.contentDocument.title = o$2, n$2.contentWindow;
					function s$2(e$4) {
						var t$3;
						return e$4 ? ((t$3 = document.createElement("div")).innerText = e$4, t$3.innerHTML) : "";
					}
				})()).document, e$2), n$1 = ((e$3, t$2) => {
					let n$2 = {}, o$2 = e$3.getComputedStyle(t$2);
					return f.asArray(o$2).forEach(function(e$4) {
						n$2[e$4] = "width" === e$4 || "height" === e$4 ? "auto" : o$2.getPropertyValue(e$4);
					}), n$2;
				})(n$1, e$2);
				var r$1 = e$2;
				do {
					var i$2 = r$1.parentElement;
					null !== i$2 && i$2.removeChild(r$1), r$1 = i$2;
				} while (r$1 && "BODY" !== r$1.tagName);
				return w[o$1] = n$1;
			})(i$1, l$1) : {}, c$1 = e$1.style;
			f.asArray(s$1).forEach(function(e$2) {
				var t$1, n$1, o$1, r$1;
				i$1.filterStyles && !i$1.filterStyles(l$1, e$2) || (n$1 = s$1.getPropertyValue(e$2), o$1 = a$1[e$2], t$1 = u$1 ? u$1.getPropertyValue(e$2) : void 0, c$1.getPropertyValue(e$2)) || (n$1 !== o$1 || u$1 && n$1 !== t$1) && (o$1 = s$1.getPropertyPriority(e$2), t$1 = c$1, n$1 = n$1, o$1 = o$1, r$1 = 0 <= ["background-clip"].indexOf(e$2 = e$2), o$1 ? (t$1.setProperty(e$2, n$1, o$1), r$1 && t$1.setProperty("-webkit-" + e$2, n$1, o$1)) : (t$1.setProperty(e$2, n$1), r$1 && t$1.setProperty("-webkit-" + e$2, n$1)));
			});
		}
		let v = null, w = {}, E = [
			"ADDRESS",
			"ARTICLE",
			"ASIDE",
			"BLOCKQUOTE",
			"DETAILS",
			"DIALOG",
			"DD",
			"DIV",
			"DL",
			"DT",
			"FIELDSET",
			"FIGCAPTION",
			"FIGURE",
			"FOOTER",
			"FORM",
			"H1",
			"H2",
			"H3",
			"H4",
			"H5",
			"H6",
			"HEADER",
			"HGROUP",
			"HR",
			"LI",
			"MAIN",
			"NAV",
			"OL",
			"P",
			"PRE",
			"SECTION",
			"SVG",
			"TABLE",
			"UL",
			"math",
			"svg",
			"BODY",
			"HEAD",
			"HTML"
		];
	})(exports);
}) });

//#endregion
export default require_dom_to_image_more_min();

//# sourceMappingURL=dom-to-image-more.js.map